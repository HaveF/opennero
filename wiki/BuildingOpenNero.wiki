#summary This page describes how to build OpenNERO from source for a variety of platforms.
#labels Featured
#sidebar TableOfContents

= Overview =

OpenNERO uses the [http://www.cmake.org/ CMake] cross-platform build system. The general steps are:
 * Install prerequisites as needed.
 * [http://code.google.com/p/opennero/source/checkout Check out the source code].
 * Run [http://www.cmake.org/ CMake].
 * Build.
 * Continue to [RunningOpenNero Running OpenNERO]

= Mac OS X =

== Prerequisites == 
 * Download and install [http://www.cmake.org/cmake/resources/software.html cmake]
 * Install [http://developer.apple.com/tools/xcode/ Xcode] (optional install on the Mac OS X DVD)

== Steps to build ==
 # (recommended) create a new directory for your build
 # in your build directory, run `cmake -G Xcode /path/to/opennero/checkout`
 # open the resulting OpenNERO.xcodeproja Xcode project file
 # Build OpenNERO using Xcode

= Windows =

== Prerequisites ==
 * [http://www.cmake.org/cmake/resources/software.html cmake]
 * [http://www.microsoft.com/visualstudio/ Microsoft Visual Studio]
 * [http://www.python.org/download/releases/2.6.5/ Latest Python 2.x with source]

== Steps to build ==
 # Open CMake, specify the source directory (opennero checkout directory) and build directory (another directory). Choose 'Suppress dev Warnings -WnoDev' from the Options menu. Click the Configure button, then click the Generate button.
 # Open the OpenNERO.sln solution file and build OpenNERO using Visual Studio.
 # To run from within Visual Studio, set OpenNERO as startup project. Also set the working directory of OpenNERO for debugging to `$(TargetDir)` (right mouse click on OpenNERO, select properties, debugging).

= Linux =

== Prerequisites ==
Make sure the following packages are installed on Ubuntu (or equivalent):
 * libboost-dev
 * libboost-date-time-dev
 * libboost-doc
 * libboost-filesystem-dev
 * libboost-python-dev
 * libboost-serialization-dev
 * libx11-dev
 * libxxf86vm-dev
 * libgl-dev
 * libz-dev

== Steps to build ==
 # (recommended) create a new directory for your build
 # in your build directory, run `cmake /path/to/opennero/checkout`
 # building using make: `make`

== To run ==
 # `cd dist`
 # `./OpenNERO`