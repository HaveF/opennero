#summary Describe how to build OpenNERO for a variety of platforms.

= Overview =

OpenNERO uses the [http://www.cmake.org/ CMake] cross-platform build system. In general, to build OpenNERO, you will first call cmake to produce IDE and operating system specific build files, and then use your IDE or build command to produce the binary. OpenNERO can be built on Linux, Mac OS X and Windows using Xcode, GNU make, Eclipse and Microsoft Visual Studio.

= Mac OS X =

== Prerequisites == 
 * Download and install [http://www.cmake.org/cmake/resources/software.html cmake]
 * Install [http://developer.apple.com/tools/xcode/ Xcode] (optional install on the Mac OS X DVD)

== Steps to build ==
 # (recommended) create a new directory for your build
 # in your build directory, run `cmake -G Xcode /path/to/opennero/checkout`
 # open the resulting OpenNERO.xcodeproj Xcode project file
 # Build OpenNERO using Xcode

= Windows =

== Prerequisites ==
 * [http://www.cmake.org/cmake/resources/software.html cmake]
 * [http://www.microsoft.com/visualstudio/ Microsoft Visual Studio]

== Steps to build ==
 # Open CMake, specify the source directory (opennero checkout directory) and build directory (another directory), and generate the files for your version of Visual Studio
 # Open the OpenNERO.sln solution file and build OpenNERO using Visual Studio.
 # To run from within Visual Studio, set the working directory for debugging to `*`$(TargetDir)`*`

= Linux =

== Prerequisites ==
Make sure the following packages are installed on Ubuntu (or equivalent):
 * libboost-dev
 * libboost-date-time-dev
 * libboost-doc
 * libboost-filesystem-dev
 * libboost-python-dev
 * libboost-serialization-dev
 * libx11-dev
 * libxxf86vm-dev
 * libgl-dev
 * libz-dev

== Steps to build ==
 # (recommended) create a new directory for your build
 # in your build directory, run `cmake /path/to/opennero/checkout`
 # building using make: `make`

== To run ==
 # `cd dist`
 # `./OpenNERO`